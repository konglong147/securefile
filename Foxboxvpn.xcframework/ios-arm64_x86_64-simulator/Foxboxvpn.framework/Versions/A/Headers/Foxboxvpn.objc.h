// Objective-C API for talking to github.com/konglong147/securefile/experimental/libbox Go package.
//   gobind -lang=objc github.com/konglong147/securefile/experimental/libbox
//
// File is generated by gobind. Do not edit.

#ifndef __Foxboxvpn_H__
#define __Foxboxvpn_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"


@class FoxboxvpnBoxService;
@class FoxboxvpnCommandClient;
@class FoxboxvpnCommandClientOptions;
@class FoxboxvpnCommandServer;
@class FoxboxvpnConnection;
@class FoxboxvpnConnections;
@class FoxboxvpnDeprecatedNote;
@class FoxboxvpnErrorMessage;
@class FoxboxvpnExchangeContext;
@class FoxboxvpnImportRemoteProfile;
@class FoxboxvpnNetworkInterface;
@class FoxboxvpnNotification;
@class FoxboxvpnOutboundGroup;
@class FoxboxvpnOutboundGroupItem;
@class FoxboxvpnPProfServer;
@class FoxboxvpnProfileContent;
@class FoxboxvpnProfileContentRequest;
@class FoxboxvpnProfileDecoder;
@class FoxboxvpnProfileEncoder;
@class FoxboxvpnProfilePreview;
@class FoxboxvpnRoutePrefix;
@class FoxboxvpnStatusMessage;
@class FoxboxvpnStringBox;
@class FoxboxvpnSystemProxyStatus;
@class FoxboxvpnWIFIState;
@protocol FoxboxvpnCommandClientHandler;
@class FoxboxvpnCommandClientHandler;
@protocol FoxboxvpnCommandServerHandler;
@class FoxboxvpnCommandServerHandler;
@protocol FoxboxvpnConnectionIterator;
@class FoxboxvpnConnectionIterator;
@protocol FoxboxvpnDeprecatedNoteIterator;
@class FoxboxvpnDeprecatedNoteIterator;
@protocol FoxboxvpnFunc;
@class FoxboxvpnFunc;
@protocol FoxboxvpnHTTPClient;
@class FoxboxvpnHTTPClient;
@protocol FoxboxvpnHTTPRequest;
@class FoxboxvpnHTTPRequest;
@protocol FoxboxvpnHTTPResponse;
@class FoxboxvpnHTTPResponse;
@protocol FoxboxvpnInterfaceUpdateListener;
@class FoxboxvpnInterfaceUpdateListener;
@protocol FoxboxvpnLocalDNSTransport;
@class FoxboxvpnLocalDNSTransport;
@protocol FoxboxvpnNetworkInterfaceIterator;
@class FoxboxvpnNetworkInterfaceIterator;
@protocol FoxboxvpnOnDemandRule;
@class FoxboxvpnOnDemandRule;
@protocol FoxboxvpnOnDemandRuleIterator;
@class FoxboxvpnOnDemandRuleIterator;
@protocol FoxboxvpnOutboundGroupItemIterator;
@class FoxboxvpnOutboundGroupItemIterator;
@protocol FoxboxvpnOutboundGroupIterator;
@class FoxboxvpnOutboundGroupIterator;
@protocol FoxboxvpnPlatformInterface;
@class FoxboxvpnPlatformInterface;
@protocol FoxboxvpnProfilePreviewIterator;
@class FoxboxvpnProfilePreviewIterator;
@protocol FoxboxvpnRoutePrefixIterator;
@class FoxboxvpnRoutePrefixIterator;
@protocol FoxboxvpnStringIterator;
@class FoxboxvpnStringIterator;
@protocol FoxboxvpnTunInterface;
@class FoxboxvpnTunInterface;
@protocol FoxboxvpnTunOptions;
@class FoxboxvpnTunOptions;

@protocol FoxboxvpnCommandClientHandler <NSObject>
- (void)clearLogs;
- (void)connected;
- (void)disconnected:(NSString* _Nullable)message;
- (void)initializeClashMode:(id<FoxboxvpnStringIterator> _Nullable)modeList currentMode:(NSString* _Nullable)currentMode;
- (void)updateClashMode:(NSString* _Nullable)newMode;
- (void)writeConnections:(FoxboxvpnConnections* _Nullable)message;
- (void)writeGroups:(id<FoxboxvpnOutboundGroupIterator> _Nullable)message;
- (void)writeLogs:(id<FoxboxvpnStringIterator> _Nullable)messageList;
- (void)writeStatus:(FoxboxvpnStatusMessage* _Nullable)message;
@end

@protocol FoxboxvpnCommandServerHandler <NSObject>
- (FoxboxvpnSystemProxyStatus* _Nullable)getSystemProxyStatus;
- (void)postServiceClose;
- (BOOL)serviceReload:(NSError* _Nullable* _Nullable)error;
- (BOOL)setSystemProxyEnabled:(BOOL)isEnabled error:(NSError* _Nullable* _Nullable)error;
@end

@protocol FoxboxvpnConnectionIterator <NSObject>
- (BOOL)hasNext;
- (FoxboxvpnConnection* _Nullable)next;
@end

@protocol FoxboxvpnDeprecatedNoteIterator <NSObject>
- (BOOL)hasNext;
- (FoxboxvpnDeprecatedNote* _Nullable)next;
@end

@protocol FoxboxvpnFunc <NSObject>
- (BOOL)invoke:(NSError* _Nullable* _Nullable)error;
@end

@protocol FoxboxvpnHTTPClient <NSObject>
- (void)close;
- (void)keepAlive;
- (void)modernTLS;
- (id<FoxboxvpnHTTPRequest> _Nullable)newRequest;
- (void)pinnedSHA256:(NSString* _Nullable)sumHex;
- (void)pinnedTLS12;
- (void)restrictedTLS;
- (void)trySocks5:(int32_t)port;
@end

@protocol FoxboxvpnHTTPRequest <NSObject>
- (id<FoxboxvpnHTTPResponse> _Nullable)execute:(NSError* _Nullable* _Nullable)error;
- (void)randomUserAgent;
- (void)setContent:(NSData* _Nullable)content;
- (void)setContentString:(NSString* _Nullable)content;
- (void)setHeader:(NSString* _Nullable)key value:(NSString* _Nullable)value;
- (void)setMethod:(NSString* _Nullable)method;
- (BOOL)setURL:(NSString* _Nullable)link error:(NSError* _Nullable* _Nullable)error;
- (void)setUserAgent:(NSString* _Nullable)userAgent;
@end

@protocol FoxboxvpnHTTPResponse <NSObject>
- (FoxboxvpnStringBox* _Nullable)getContent:(NSError* _Nullable* _Nullable)error;
- (BOOL)writeTo:(NSString* _Nullable)path error:(NSError* _Nullable* _Nullable)error;
@end

@protocol FoxboxvpnInterfaceUpdateListener <NSObject>
- (void)updateDefaultInterface:(NSString* _Nullable)interfaceName interfaceIndex:(int32_t)interfaceIndex;
@end

@protocol FoxboxvpnLocalDNSTransport <NSObject>
- (BOOL)exchange:(FoxboxvpnExchangeContext* _Nullable)ctx message:(NSData* _Nullable)message error:(NSError* _Nullable* _Nullable)error;
- (BOOL)lookup:(FoxboxvpnExchangeContext* _Nullable)ctx network:(NSString* _Nullable)network domain:(NSString* _Nullable)domain error:(NSError* _Nullable* _Nullable)error;
- (BOOL)raw;
@end

@protocol FoxboxvpnNetworkInterfaceIterator <NSObject>
- (BOOL)hasNext;
- (FoxboxvpnNetworkInterface* _Nullable)next;
@end

@protocol FoxboxvpnOnDemandRule <NSObject>
- (id<FoxboxvpnStringIterator> _Nullable)dnsSearchDomainMatch;
- (id<FoxboxvpnStringIterator> _Nullable)dnsServerAddressMatch;
- (int32_t)interfaceTypeMatch;
- (NSString* _Nonnull)probeURL;
- (id<FoxboxvpnStringIterator> _Nullable)ssidMatch;
- (int32_t)target;
@end

@protocol FoxboxvpnOnDemandRuleIterator <NSObject>
- (BOOL)hasNext;
- (id<FoxboxvpnOnDemandRule> _Nullable)next;
@end

@protocol FoxboxvpnOutboundGroupItemIterator <NSObject>
- (BOOL)hasNext;
- (FoxboxvpnOutboundGroupItem* _Nullable)next;
@end

@protocol FoxboxvpnOutboundGroupIterator <NSObject>
- (BOOL)hasNext;
- (FoxboxvpnOutboundGroup* _Nullable)next;
@end

@protocol FoxboxvpnPlatformInterface <NSObject>
- (BOOL)autoDetectInterfaceControl:(int32_t)fd error:(NSError* _Nullable* _Nullable)error;
- (void)clearDNSCache;
- (BOOL)closeDefaultInterfaceMonitor:(id<FoxboxvpnInterfaceUpdateListener> _Nullable)listener error:(NSError* _Nullable* _Nullable)error;
- (BOOL)findConnectionOwner:(int32_t)ipProtocol sourceAddress:(NSString* _Nullable)sourceAddress sourcePort:(int32_t)sourcePort destinationAddress:(NSString* _Nullable)destinationAddress destinationPort:(int32_t)destinationPort ret0_:(int32_t* _Nullable)ret0_ error:(NSError* _Nullable* _Nullable)error;
- (id<FoxboxvpnNetworkInterfaceIterator> _Nullable)getInterfaces:(NSError* _Nullable* _Nullable)error;
- (BOOL)includeAllNetworks;
- (BOOL)openTun:(id<FoxboxvpnTunOptions> _Nullable)options ret0_:(int32_t* _Nullable)ret0_ error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)packageNameByUid:(int32_t)uid error:(NSError* _Nullable* _Nullable)error;
- (FoxboxvpnWIFIState* _Nullable)readWIFIState;
- (BOOL)sendNotification:(FoxboxvpnNotification* _Nullable)notification error:(NSError* _Nullable* _Nullable)error;
- (BOOL)startDefaultInterfaceMonitor:(id<FoxboxvpnInterfaceUpdateListener> _Nullable)listener error:(NSError* _Nullable* _Nullable)error;
- (BOOL)uidByPackageName:(NSString* _Nullable)packageName ret0_:(int32_t* _Nullable)ret0_ error:(NSError* _Nullable* _Nullable)error;
- (BOOL)underNetworkExtension;
- (BOOL)usePlatformAutoDetectInterfaceControl;
- (BOOL)usePlatformDefaultInterfaceMonitor;
- (BOOL)usePlatformInterfaceGetter;
- (BOOL)useProcFS;
- (void)writeLog:(NSString* _Nullable)message;
@end

@protocol FoxboxvpnProfilePreviewIterator <NSObject>
- (BOOL)hasNext;
- (FoxboxvpnProfilePreview* _Nullable)next;
@end

@protocol FoxboxvpnRoutePrefixIterator <NSObject>
- (BOOL)hasNext;
- (FoxboxvpnRoutePrefix* _Nullable)next;
@end

@protocol FoxboxvpnStringIterator <NSObject>
- (BOOL)hasNext;
- (int32_t)len;
- (NSString* _Nonnull)next;
@end

@protocol FoxboxvpnTunInterface <NSObject>
- (BOOL)close:(NSError* _Nullable* _Nullable)error;
- (int32_t)fileDescriptor;
@end

@protocol FoxboxvpnTunOptions <NSObject>
- (BOOL)getAutoRoute;
- (FoxboxvpnStringBox* _Nullable)getDNSServerAddress:(NSError* _Nullable* _Nullable)error;
- (id<FoxboxvpnStringIterator> _Nullable)getExcludePackage;
- (id<FoxboxvpnStringIterator> _Nullable)getHTTPProxyBypassDomain;
- (id<FoxboxvpnStringIterator> _Nullable)getHTTPProxyMatchDomain;
- (NSString* _Nonnull)getHTTPProxyServer;
- (int32_t)getHTTPProxyServerPort;
- (id<FoxboxvpnStringIterator> _Nullable)getIncludePackage;
- (id<FoxboxvpnRoutePrefixIterator> _Nullable)getInet4Address;
- (id<FoxboxvpnRoutePrefixIterator> _Nullable)getInet4RouteAddress;
- (id<FoxboxvpnRoutePrefixIterator> _Nullable)getInet4RouteExcludeAddress;
- (id<FoxboxvpnRoutePrefixIterator> _Nullable)getInet4RouteRange;
- (id<FoxboxvpnRoutePrefixIterator> _Nullable)getInet6Address;
- (id<FoxboxvpnRoutePrefixIterator> _Nullable)getInet6RouteAddress;
- (id<FoxboxvpnRoutePrefixIterator> _Nullable)getInet6RouteExcludeAddress;
- (id<FoxboxvpnRoutePrefixIterator> _Nullable)getInet6RouteRange;
- (int32_t)getMTU;
- (BOOL)getStrictRoute;
- (BOOL)isHTTPProxyEnabled;
@end

@interface FoxboxvpnBoxService : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
- (BOOL)close:(NSError* _Nullable* _Nullable)error;
- (BOOL)needWIFIState;
- (void)pause;
- (void)resetNetwork;
- (BOOL)start:(NSError* _Nullable* _Nullable)error;
- (void)wake;
@end

@interface FoxboxvpnCommandClient : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init:(id<FoxboxvpnCommandClientHandler> _Nullable)handler options:(FoxboxvpnCommandClientOptions* _Nullable)options;
- (BOOL)closeConnection:(NSString* _Nullable)connId error:(NSError* _Nullable* _Nullable)error;
- (BOOL)closeConnections:(NSError* _Nullable* _Nullable)error;
- (BOOL)connect:(NSError* _Nullable* _Nullable)error;
- (BOOL)disconnect:(NSError* _Nullable* _Nullable)error;
- (id<FoxboxvpnDeprecatedNoteIterator> _Nullable)getDeprecatedNotes:(NSError* _Nullable* _Nullable)error;
- (FoxboxvpnSystemProxyStatus* _Nullable)getSystemProxyStatus:(NSError* _Nullable* _Nullable)error;
- (BOOL)selectOutbound:(NSString* _Nullable)groupTag outboundTag:(NSString* _Nullable)outboundTag error:(NSError* _Nullable* _Nullable)error;
- (BOOL)serviceClose:(NSError* _Nullable* _Nullable)error;
- (BOOL)serviceReload:(NSError* _Nullable* _Nullable)error;
- (BOOL)setClashMode:(NSString* _Nullable)newMode error:(NSError* _Nullable* _Nullable)error;
- (BOOL)setGroupExpand:(NSString* _Nullable)groupTag isExpand:(BOOL)isExpand error:(NSError* _Nullable* _Nullable)error;
- (BOOL)setSystemProxyEnabled:(BOOL)isEnabled error:(NSError* _Nullable* _Nullable)error;
- (BOOL)urlTest:(NSString* _Nullable)groupTag error:(NSError* _Nullable* _Nullable)error;
@end

@interface FoxboxvpnCommandClientOptions : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) int32_t command;
@property (nonatomic) int64_t statusInterval;
@end

@interface FoxboxvpnCommandServer : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init:(id<FoxboxvpnCommandServerHandler> _Nullable)handler maxLines:(int32_t)maxLines;
- (BOOL)close:(NSError* _Nullable* _Nullable)error;
- (void)resetLog;
- (void)setService:(FoxboxvpnBoxService* _Nullable)newService;
- (BOOL)start:(NSError* _Nullable* _Nullable)error;
- (void)writeMessage:(NSString* _Nullable)message;
@end

@interface FoxboxvpnConnection : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull id_;
@property (nonatomic) NSString* _Nonnull inbound;
@property (nonatomic) NSString* _Nonnull inboundType;
@property (nonatomic) int32_t ipVersion;
@property (nonatomic) NSString* _Nonnull network;
@property (nonatomic) NSString* _Nonnull source;
@property (nonatomic) NSString* _Nonnull destination;
@property (nonatomic) NSString* _Nonnull domain;
@property (nonatomic) NSString* _Nonnull protocol;
@property (nonatomic) NSString* _Nonnull user;
@property (nonatomic) NSString* _Nonnull fromOutbound;
@property (nonatomic) int64_t createdAt;
@property (nonatomic) int64_t closedAt;
@property (nonatomic) int64_t uplink;
@property (nonatomic) int64_t downlink;
@property (nonatomic) int64_t uplinkTotal;
@property (nonatomic) int64_t downlinkTotal;
@property (nonatomic) NSString* _Nonnull rule;
@property (nonatomic) NSString* _Nonnull outbound;
@property (nonatomic) NSString* _Nonnull outboundType;
// skipped field Connection.ChainList with unsupported type: []string

- (id<FoxboxvpnStringIterator> _Nullable)chain;
- (NSString* _Nonnull)displayDestination;
@end

@interface FoxboxvpnConnections : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
- (void)filterState:(int32_t)state;
- (id<FoxboxvpnConnectionIterator> _Nullable)iterator;
- (void)sortByDate;
- (void)sortByTraffic;
- (void)sortByTrafficTotal;
@end

@interface FoxboxvpnDeprecatedNote : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull name;
@property (nonatomic) NSString* _Nonnull description;
@property (nonatomic) NSString* _Nonnull deprecatedVersion;
@property (nonatomic) NSString* _Nonnull scheduledVersion;
@property (nonatomic) NSString* _Nonnull envName;
@property (nonatomic) NSString* _Nonnull migrationLink;
- (BOOL)impending;
- (NSString* _Nonnull)message;
- (NSString* _Nonnull)messageWithLink;
@end

@interface FoxboxvpnErrorMessage : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull message;
- (NSData* _Nullable)encode;
@end

@interface FoxboxvpnExchangeContext : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
- (void)errnoCode:(int32_t)code;
- (void)errorCode:(int32_t)code;
- (void)onCancel:(id<FoxboxvpnFunc> _Nullable)callback;
- (void)rawSuccess:(NSData* _Nullable)result;
- (void)success:(NSString* _Nullable)result;
@end

@interface FoxboxvpnImportRemoteProfile : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull name;
@property (nonatomic) NSString* _Nonnull url;
@property (nonatomic) NSString* _Nonnull host;
@end

@interface FoxboxvpnNetworkInterface : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) int32_t index;
@property (nonatomic) int32_t mtu;
@property (nonatomic) NSString* _Nonnull name;
@property (nonatomic) id<FoxboxvpnStringIterator> _Nullable addresses;
@property (nonatomic) int32_t flags;
@end

@interface FoxboxvpnNotification : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull identifier;
@property (nonatomic) NSString* _Nonnull typeName;
@property (nonatomic) int32_t typeID;
@property (nonatomic) NSString* _Nonnull title;
@property (nonatomic) NSString* _Nonnull subtitle;
@property (nonatomic) NSString* _Nonnull body;
@property (nonatomic) NSString* _Nonnull openURL;
@end

@interface FoxboxvpnOutboundGroup : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull tag;
@property (nonatomic) NSString* _Nonnull type;
@property (nonatomic) BOOL selectable;
@property (nonatomic) NSString* _Nonnull selected;
@property (nonatomic) BOOL isExpand;
// skipped field OutboundGroup.ItemList with unsupported type: []*github.com/konglong147/securefile/experimental/libbox.OutboundGroupItem

- (id<FoxboxvpnOutboundGroupItemIterator> _Nullable)getItems;
@end

@interface FoxboxvpnOutboundGroupItem : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull tag;
@property (nonatomic) NSString* _Nonnull type;
@property (nonatomic) int64_t urlTestTime;
@property (nonatomic) int32_t urlTestDelay;
@end

@interface FoxboxvpnPProfServer : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init:(long)port;
- (BOOL)close:(NSError* _Nullable* _Nullable)error;
- (BOOL)start:(NSError* _Nullable* _Nullable)error;
@end

@interface FoxboxvpnProfileContent : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull name;
@property (nonatomic) int32_t type;
@property (nonatomic) NSString* _Nonnull config;
@property (nonatomic) NSString* _Nonnull remotePath;
@property (nonatomic) BOOL autoUpdate;
@property (nonatomic) int32_t autoUpdateInterval;
@property (nonatomic) int64_t lastUpdated;
- (NSData* _Nullable)encode;
@end

@interface FoxboxvpnProfileContentRequest : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) int64_t profileID;
- (NSData* _Nullable)encode;
@end

@interface FoxboxvpnProfileDecoder : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
- (BOOL)decode:(NSData* _Nullable)data error:(NSError* _Nullable* _Nullable)error;
- (id<FoxboxvpnProfilePreviewIterator> _Nullable)iterator;
@end

@interface FoxboxvpnProfileEncoder : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
- (void)append:(FoxboxvpnProfilePreview* _Nullable)profile;
- (NSData* _Nullable)encode;
@end

@interface FoxboxvpnProfilePreview : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) int64_t profileID;
@property (nonatomic) NSString* _Nonnull name;
@property (nonatomic) int32_t type;
@end

@interface FoxboxvpnRoutePrefix : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
- (NSString* _Nonnull)address;
- (NSString* _Nonnull)mask;
- (int32_t)prefix;
- (NSString* _Nonnull)string;
@end

@interface FoxboxvpnStatusMessage : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) int64_t memory;
@property (nonatomic) int32_t goroutines;
@property (nonatomic) int32_t connectionsIn;
@property (nonatomic) int32_t connectionsOut;
@property (nonatomic) BOOL trafficAvailable;
@property (nonatomic) int64_t uplink;
@property (nonatomic) int64_t downlink;
@property (nonatomic) int64_t uplinkTotal;
@property (nonatomic) int64_t downlinkTotal;
@end

@interface FoxboxvpnStringBox : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull value;
@end

@interface FoxboxvpnSystemProxyStatus : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) BOOL available;
@property (nonatomic) BOOL enabled;
@end

@interface FoxboxvpnWIFIState : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init:(NSString* _Nullable)wifiSSID wifiBSSID:(NSString* _Nullable)wifiBSSID;
@property (nonatomic) NSString* _Nonnull ssid;
@property (nonatomic) NSString* _Nonnull bssid;
@end

FOUNDATION_EXPORT const int32_t FoxboxvpnCommandClashMode;
FOUNDATION_EXPORT const int32_t FoxboxvpnCommandCloseConnection;
FOUNDATION_EXPORT const int32_t FoxboxvpnCommandCloseConnections;
FOUNDATION_EXPORT const int32_t FoxboxvpnCommandConnections;
FOUNDATION_EXPORT const int32_t FoxboxvpnCommandGetDeprecatedNotes;
FOUNDATION_EXPORT const int32_t FoxboxvpnCommandGetSystemProxyStatus;
FOUNDATION_EXPORT const int32_t FoxboxvpnCommandGroup;
FOUNDATION_EXPORT const int32_t FoxboxvpnCommandGroupExpand;
FOUNDATION_EXPORT const int32_t FoxboxvpnCommandLog;
FOUNDATION_EXPORT const int32_t FoxboxvpnCommandSelectOutbound;
FOUNDATION_EXPORT const int32_t FoxboxvpnCommandServiceClose;
FOUNDATION_EXPORT const int32_t FoxboxvpnCommandServiceReload;
FOUNDATION_EXPORT const int32_t FoxboxvpnCommandSetClashMode;
FOUNDATION_EXPORT const int32_t FoxboxvpnCommandSetSystemProxyEnabled;
FOUNDATION_EXPORT const int32_t FoxboxvpnCommandStatus;
FOUNDATION_EXPORT const int32_t FoxboxvpnCommandURLTest;
FOUNDATION_EXPORT const int64_t FoxboxvpnConnectionStateActive;
FOUNDATION_EXPORT const int64_t FoxboxvpnConnectionStateAll;
FOUNDATION_EXPORT const int64_t FoxboxvpnConnectionStateClosed;
FOUNDATION_EXPORT const int64_t FoxboxvpnMessageTypeError;
FOUNDATION_EXPORT const int64_t FoxboxvpnMessageTypeProfileContent;
FOUNDATION_EXPORT const int64_t FoxboxvpnMessageTypeProfileContentRequest;
FOUNDATION_EXPORT const int64_t FoxboxvpnMessageTypeProfileList;
FOUNDATION_EXPORT const int32_t FoxboxvpnProfileTypeLocal;
FOUNDATION_EXPORT const int32_t FoxboxvpnProfileTypeRemote;
FOUNDATION_EXPORT const int32_t FoxboxvpnProfileTypeiCloud;

FOUNDATION_EXPORT BOOL FoxboxvpnCheckConfig(NSString* _Nullable configContent, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT void FoxboxvpnClearServiceError(void);

FOUNDATION_EXPORT FoxboxvpnErrorMessage* _Nullable FoxboxvpnDecodeErrorMessage(NSData* _Nullable data, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT int32_t FoxboxvpnDecodeLengthChunk(NSData* _Nullable data);

FOUNDATION_EXPORT FoxboxvpnProfileContent* _Nullable FoxboxvpnDecodeProfileContent(NSData* _Nullable data, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT FoxboxvpnProfileContentRequest* _Nullable FoxboxvpnDecodeProfileContentRequest(NSData* _Nullable data, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable FoxboxvpnEncodeChunkedMessage(NSData* _Nullable data);

FOUNDATION_EXPORT NSString* _Nonnull FoxboxvpnFormatBytes(int64_t length);

FOUNDATION_EXPORT FoxboxvpnStringBox* _Nullable FoxboxvpnFormatConfig(NSString* _Nullable configContent, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull FoxboxvpnFormatDuration(int64_t duration);

FOUNDATION_EXPORT NSString* _Nonnull FoxboxvpnFormatMemoryBytes(int64_t length);

FOUNDATION_EXPORT NSString* _Nonnull FoxboxvpnGenerateRemoteProfileImportLink(NSString* _Nullable name, NSString* _Nullable remoteURL);

FOUNDATION_EXPORT int32_t FoxboxvpnGetTunnelFileDescriptor(void);

FOUNDATION_EXPORT FoxboxvpnCommandClient* _Nullable FoxboxvpnNewCommandClient(id<FoxboxvpnCommandClientHandler> _Nullable handler, FoxboxvpnCommandClientOptions* _Nullable options);

FOUNDATION_EXPORT FoxboxvpnCommandServer* _Nullable FoxboxvpnNewCommandServer(id<FoxboxvpnCommandServerHandler> _Nullable handler, int32_t maxLines);

FOUNDATION_EXPORT id<FoxboxvpnHTTPClient> _Nullable FoxboxvpnNewHTTPClient(void);

FOUNDATION_EXPORT FoxboxvpnPProfServer* _Nullable FoxboxvpnNewPProfServer(long port);

FOUNDATION_EXPORT FoxboxvpnBoxService* _Nullable FoxboxvpnNewService(NSString* _Nullable configContent, id<FoxboxvpnPlatformInterface> _Nullable platformInterface, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT FoxboxvpnCommandClient* _Nullable FoxboxvpnNewStandaloneCommandClient(void);

FOUNDATION_EXPORT FoxboxvpnWIFIState* _Nullable FoxboxvpnNewWIFIState(NSString* _Nullable wifiSSID, NSString* _Nullable wifiBSSID);

FOUNDATION_EXPORT FoxboxvpnImportRemoteProfile* _Nullable FoxboxvpnParseRemoteProfileImportLink(NSString* _Nullable importLink, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull FoxboxvpnProxyDisplayType(NSString* _Nullable proxyType);

FOUNDATION_EXPORT FoxboxvpnStringBox* _Nullable FoxboxvpnReadServiceError(NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT BOOL FoxboxvpnRedirectStderr(NSString* _Nullable path, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT void FoxboxvpnRegisterLocalDNSTransport(id<FoxboxvpnLocalDNSTransport> _Nullable transport);

FOUNDATION_EXPORT void FoxboxvpnSetLocale(NSString* _Nullable localeId);

FOUNDATION_EXPORT void FoxboxvpnSetMemoryLimit(BOOL enabled);

FOUNDATION_EXPORT void FoxboxvpnSetup(NSString* _Nullable basePath, NSString* _Nullable workingPath, NSString* _Nullable tempPath, BOOL isTVOS);

FOUNDATION_EXPORT BOOL FoxboxvpnSetupWithUsername(NSString* _Nullable basePath, NSString* _Nullable workingPath, NSString* _Nullable tempPath, NSString* _Nullable username, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull FoxboxvpnVersion(void);

FOUNDATION_EXPORT BOOL FoxboxvpnWriteServiceError(NSString* _Nullable message, NSError* _Nullable* _Nullable error);

@class FoxboxvpnCommandClientHandler;

@class FoxboxvpnCommandServerHandler;

@class FoxboxvpnConnectionIterator;

@class FoxboxvpnDeprecatedNoteIterator;

@class FoxboxvpnFunc;

@class FoxboxvpnHTTPClient;

@class FoxboxvpnHTTPRequest;

@class FoxboxvpnHTTPResponse;

@class FoxboxvpnInterfaceUpdateListener;

@class FoxboxvpnLocalDNSTransport;

@class FoxboxvpnNetworkInterfaceIterator;

@class FoxboxvpnOnDemandRule;

@class FoxboxvpnOnDemandRuleIterator;

@class FoxboxvpnOutboundGroupItemIterator;

@class FoxboxvpnOutboundGroupIterator;

@class FoxboxvpnPlatformInterface;

@class FoxboxvpnProfilePreviewIterator;

@class FoxboxvpnRoutePrefixIterator;

@class FoxboxvpnStringIterator;

@class FoxboxvpnTunInterface;

@class FoxboxvpnTunOptions;

@interface FoxboxvpnCommandClientHandler : NSObject <goSeqRefInterface, FoxboxvpnCommandClientHandler> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)clearLogs;
- (void)connected;
- (void)disconnected:(NSString* _Nullable)message;
- (void)initializeClashMode:(id<FoxboxvpnStringIterator> _Nullable)modeList currentMode:(NSString* _Nullable)currentMode;
- (void)updateClashMode:(NSString* _Nullable)newMode;
- (void)writeConnections:(FoxboxvpnConnections* _Nullable)message;
- (void)writeGroups:(id<FoxboxvpnOutboundGroupIterator> _Nullable)message;
- (void)writeLogs:(id<FoxboxvpnStringIterator> _Nullable)messageList;
- (void)writeStatus:(FoxboxvpnStatusMessage* _Nullable)message;
@end

@interface FoxboxvpnCommandServerHandler : NSObject <goSeqRefInterface, FoxboxvpnCommandServerHandler> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (FoxboxvpnSystemProxyStatus* _Nullable)getSystemProxyStatus;
- (void)postServiceClose;
- (BOOL)serviceReload:(NSError* _Nullable* _Nullable)error;
- (BOOL)setSystemProxyEnabled:(BOOL)isEnabled error:(NSError* _Nullable* _Nullable)error;
@end

@interface FoxboxvpnConnectionIterator : NSObject <goSeqRefInterface, FoxboxvpnConnectionIterator> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (BOOL)hasNext;
- (FoxboxvpnConnection* _Nullable)next;
@end

@interface FoxboxvpnDeprecatedNoteIterator : NSObject <goSeqRefInterface, FoxboxvpnDeprecatedNoteIterator> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (BOOL)hasNext;
- (FoxboxvpnDeprecatedNote* _Nullable)next;
@end

@interface FoxboxvpnFunc : NSObject <goSeqRefInterface, FoxboxvpnFunc> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (BOOL)invoke:(NSError* _Nullable* _Nullable)error;
@end

@interface FoxboxvpnHTTPClient : NSObject <goSeqRefInterface, FoxboxvpnHTTPClient> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)close;
- (void)keepAlive;
- (void)modernTLS;
- (id<FoxboxvpnHTTPRequest> _Nullable)newRequest;
- (void)pinnedSHA256:(NSString* _Nullable)sumHex;
- (void)pinnedTLS12;
- (void)restrictedTLS;
- (void)trySocks5:(int32_t)port;
@end

@interface FoxboxvpnHTTPRequest : NSObject <goSeqRefInterface, FoxboxvpnHTTPRequest> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (id<FoxboxvpnHTTPResponse> _Nullable)execute:(NSError* _Nullable* _Nullable)error;
- (void)randomUserAgent;
- (void)setContent:(NSData* _Nullable)content;
- (void)setContentString:(NSString* _Nullable)content;
- (void)setHeader:(NSString* _Nullable)key value:(NSString* _Nullable)value;
- (void)setMethod:(NSString* _Nullable)method;
- (BOOL)setURL:(NSString* _Nullable)link error:(NSError* _Nullable* _Nullable)error;
- (void)setUserAgent:(NSString* _Nullable)userAgent;
@end

@interface FoxboxvpnHTTPResponse : NSObject <goSeqRefInterface, FoxboxvpnHTTPResponse> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (FoxboxvpnStringBox* _Nullable)getContent:(NSError* _Nullable* _Nullable)error;
- (BOOL)writeTo:(NSString* _Nullable)path error:(NSError* _Nullable* _Nullable)error;
@end

@interface FoxboxvpnInterfaceUpdateListener : NSObject <goSeqRefInterface, FoxboxvpnInterfaceUpdateListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)updateDefaultInterface:(NSString* _Nullable)interfaceName interfaceIndex:(int32_t)interfaceIndex;
@end

@interface FoxboxvpnLocalDNSTransport : NSObject <goSeqRefInterface, FoxboxvpnLocalDNSTransport> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (BOOL)exchange:(FoxboxvpnExchangeContext* _Nullable)ctx message:(NSData* _Nullable)message error:(NSError* _Nullable* _Nullable)error;
- (BOOL)lookup:(FoxboxvpnExchangeContext* _Nullable)ctx network:(NSString* _Nullable)network domain:(NSString* _Nullable)domain error:(NSError* _Nullable* _Nullable)error;
- (BOOL)raw;
@end

@interface FoxboxvpnNetworkInterfaceIterator : NSObject <goSeqRefInterface, FoxboxvpnNetworkInterfaceIterator> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (BOOL)hasNext;
- (FoxboxvpnNetworkInterface* _Nullable)next;
@end

@interface FoxboxvpnOnDemandRule : NSObject <goSeqRefInterface, FoxboxvpnOnDemandRule> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (id<FoxboxvpnStringIterator> _Nullable)dnsSearchDomainMatch;
- (id<FoxboxvpnStringIterator> _Nullable)dnsServerAddressMatch;
- (int32_t)interfaceTypeMatch;
- (NSString* _Nonnull)probeURL;
- (id<FoxboxvpnStringIterator> _Nullable)ssidMatch;
- (int32_t)target;
@end

@interface FoxboxvpnOnDemandRuleIterator : NSObject <goSeqRefInterface, FoxboxvpnOnDemandRuleIterator> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (BOOL)hasNext;
- (id<FoxboxvpnOnDemandRule> _Nullable)next;
@end

@interface FoxboxvpnOutboundGroupItemIterator : NSObject <goSeqRefInterface, FoxboxvpnOutboundGroupItemIterator> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (BOOL)hasNext;
- (FoxboxvpnOutboundGroupItem* _Nullable)next;
@end

@interface FoxboxvpnOutboundGroupIterator : NSObject <goSeqRefInterface, FoxboxvpnOutboundGroupIterator> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (BOOL)hasNext;
- (FoxboxvpnOutboundGroup* _Nullable)next;
@end

@interface FoxboxvpnPlatformInterface : NSObject <goSeqRefInterface, FoxboxvpnPlatformInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (BOOL)autoDetectInterfaceControl:(int32_t)fd error:(NSError* _Nullable* _Nullable)error;
- (void)clearDNSCache;
- (BOOL)closeDefaultInterfaceMonitor:(id<FoxboxvpnInterfaceUpdateListener> _Nullable)listener error:(NSError* _Nullable* _Nullable)error;
- (BOOL)findConnectionOwner:(int32_t)ipProtocol sourceAddress:(NSString* _Nullable)sourceAddress sourcePort:(int32_t)sourcePort destinationAddress:(NSString* _Nullable)destinationAddress destinationPort:(int32_t)destinationPort ret0_:(int32_t* _Nullable)ret0_ error:(NSError* _Nullable* _Nullable)error;
- (id<FoxboxvpnNetworkInterfaceIterator> _Nullable)getInterfaces:(NSError* _Nullable* _Nullable)error;
- (BOOL)includeAllNetworks;
- (BOOL)openTun:(id<FoxboxvpnTunOptions> _Nullable)options ret0_:(int32_t* _Nullable)ret0_ error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)packageNameByUid:(int32_t)uid error:(NSError* _Nullable* _Nullable)error;
- (FoxboxvpnWIFIState* _Nullable)readWIFIState;
- (BOOL)sendNotification:(FoxboxvpnNotification* _Nullable)notification error:(NSError* _Nullable* _Nullable)error;
- (BOOL)startDefaultInterfaceMonitor:(id<FoxboxvpnInterfaceUpdateListener> _Nullable)listener error:(NSError* _Nullable* _Nullable)error;
- (BOOL)uidByPackageName:(NSString* _Nullable)packageName ret0_:(int32_t* _Nullable)ret0_ error:(NSError* _Nullable* _Nullable)error;
- (BOOL)underNetworkExtension;
- (BOOL)usePlatformAutoDetectInterfaceControl;
- (BOOL)usePlatformDefaultInterfaceMonitor;
- (BOOL)usePlatformInterfaceGetter;
- (BOOL)useProcFS;
- (void)writeLog:(NSString* _Nullable)message;
@end

@interface FoxboxvpnProfilePreviewIterator : NSObject <goSeqRefInterface, FoxboxvpnProfilePreviewIterator> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (BOOL)hasNext;
- (FoxboxvpnProfilePreview* _Nullable)next;
@end

@interface FoxboxvpnRoutePrefixIterator : NSObject <goSeqRefInterface, FoxboxvpnRoutePrefixIterator> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (BOOL)hasNext;
- (FoxboxvpnRoutePrefix* _Nullable)next;
@end

@interface FoxboxvpnStringIterator : NSObject <goSeqRefInterface, FoxboxvpnStringIterator> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (BOOL)hasNext;
- (int32_t)len;
- (NSString* _Nonnull)next;
@end

@interface FoxboxvpnTunInterface : NSObject <goSeqRefInterface, FoxboxvpnTunInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (BOOL)close:(NSError* _Nullable* _Nullable)error;
- (int32_t)fileDescriptor;
@end

@interface FoxboxvpnTunOptions : NSObject <goSeqRefInterface, FoxboxvpnTunOptions> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (BOOL)getAutoRoute;
- (FoxboxvpnStringBox* _Nullable)getDNSServerAddress:(NSError* _Nullable* _Nullable)error;
- (id<FoxboxvpnStringIterator> _Nullable)getExcludePackage;
- (id<FoxboxvpnStringIterator> _Nullable)getHTTPProxyBypassDomain;
- (id<FoxboxvpnStringIterator> _Nullable)getHTTPProxyMatchDomain;
- (NSString* _Nonnull)getHTTPProxyServer;
- (int32_t)getHTTPProxyServerPort;
- (id<FoxboxvpnStringIterator> _Nullable)getIncludePackage;
- (id<FoxboxvpnRoutePrefixIterator> _Nullable)getInet4Address;
- (id<FoxboxvpnRoutePrefixIterator> _Nullable)getInet4RouteAddress;
- (id<FoxboxvpnRoutePrefixIterator> _Nullable)getInet4RouteExcludeAddress;
- (id<FoxboxvpnRoutePrefixIterator> _Nullable)getInet4RouteRange;
- (id<FoxboxvpnRoutePrefixIterator> _Nullable)getInet6Address;
- (id<FoxboxvpnRoutePrefixIterator> _Nullable)getInet6RouteAddress;
- (id<FoxboxvpnRoutePrefixIterator> _Nullable)getInet6RouteExcludeAddress;
- (id<FoxboxvpnRoutePrefixIterator> _Nullable)getInet6RouteRange;
- (int32_t)getMTU;
- (BOOL)getStrictRoute;
- (BOOL)isHTTPProxyEnabled;
@end

#endif
